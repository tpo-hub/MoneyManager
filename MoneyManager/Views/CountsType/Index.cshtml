@model IEnumerable<CountType>

@{
    ViewData["Title"] = "Tipos Cuentas";
}

<h5>El tipo de cuenta se refiere a como podemos agrupar cuentas.</h5>
<h5><i>Ejemplo: Tarjetas de credito, prestamos, etc</i></h5>
<br />
<a asp-action="Create" class="btn btn-primary mb-3">Crear un tipo nuevo</a>

<table class="table">
    <thead>
        <tr>
            <th>Acciones</th>
            <th>Nombre</th>
        </tr>
    </thead>
    <tbody id="sorteable">
        @foreach(var countType in Model)
        {
            <tr>
                <td>
                   <input type="hidden" value="@countType.Id" class="ids" />
                   <a  class="btn btn-primary" asp-action="Edit" asp-route-id="@countType.Id">Editar</a>
                   <a asp-action="Delete" asp-route-id="@countType.Id" class="btn btn-danger">Borrar</a>
                </td>
                <td>@countType.Name</td>
            </tr>
        }
    </tbody>
</table>
@section Scripts{
    <script>
        const urlSort = '@Url.Action("Sortable")';

        $(function () {
            $("#sorteable").sortable({
                stop: async function (e, ui) {
                    await updateOrder();
                }
            });

            async function updateOrder() {
                const ids = getIdFromElements();
                await sendIds(ids);
            }

            function getIdFromElements() {
                const ids = $(".ids").map(function () {
                    return $(this).val();
                }).get();
                return ids;
            }

            async function sendIds(ids) {
                var data = JSON.stringify(ids);
                await fetch(urlSort, {
                    method: 'POST',
                    body: data,
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
            }

        });

    </script>
 }